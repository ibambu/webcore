<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bamboo.module.menu.dao.MenuDao">
  <resultMap id="BaseResultMap" type="com.bamboo.module.menu.beans.Menu">
    <id column="MENU_ID" jdbcType="INTEGER" property="menuId" />
    <result column="MENU_NAME" jdbcType="VARCHAR" property="menuName" />
    <result column="CREATE_TIME" jdbcType="DATE" property="createTime" />
    <result column="PARENT_MENU_ID" jdbcType="VARCHAR" property="parentMenuId" />
    <result column="MENU_HREF" jdbcType="VARCHAR" property="menuHref" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    MENU_ID, MENU_NAME, CREATE_TIME, PARENT_MENU_ID, MENU_HREF
  </sql>
  <select id="selectByExample" parameterType="com.bamboo.module.menu.beans.MenuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ts_menu_def
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ts_menu_def
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ts_menu_def
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bamboo.module.menu.beans.MenuExample">
    delete from ts_menu_def
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertAA" parameterType="com.bamboo.module.menu.beans.Menu">
    <selectKey keyProperty="menuId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts_menu_def (MENU_NAME, CREATE_TIME, PARENT_MENU_ID, 
      MENU_HREF)
    values (#{menuName,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{parentMenuId,jdbcType=VARCHAR}, 
      #{menuHref,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.bamboo.module.menu.beans.Menu">
    <selectKey keyProperty="menuId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ts_menu_def
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuName != null">
        MENU_NAME,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="parentMenuId != null">
        PARENT_MENU_ID,
      </if>
      <if test="menuHref != null">
        MENU_HREF,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="parentMenuId != null">
        #{parentMenuId,jdbcType=VARCHAR},
      </if>
      <if test="menuHref != null">
        #{menuHref,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bamboo.module.menu.beans.MenuExample" resultType="java.lang.Long">
    select count(*) from ts_menu_def
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ts_menu_def
    <set>
      <if test="record.menuId != null">
        MENU_ID = #{record.menuId,jdbcType=INTEGER},
      </if>
      <if test="record.menuName != null">
        MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.parentMenuId != null">
        PARENT_MENU_ID = #{record.parentMenuId,jdbcType=VARCHAR},
      </if>
      <if test="record.menuHref != null">
        MENU_HREF = #{record.menuHref,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ts_menu_def
    set MENU_ID = #{record.menuId,jdbcType=INTEGER},
      MENU_NAME = #{record.menuName,jdbcType=VARCHAR},
      CREATE_TIME = #{record.createTime,jdbcType=DATE},
      PARENT_MENU_ID = #{record.parentMenuId,jdbcType=VARCHAR},
      MENU_HREF = #{record.menuHref,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bamboo.module.menu.beans.Menu">
    update ts_menu_def
    <set>
      <if test="menuName != null">
        MENU_NAME = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=DATE},
      </if>
      <if test="parentMenuId != null">
        PARENT_MENU_ID = #{parentMenuId,jdbcType=VARCHAR},
      </if>
      <if test="menuHref != null">
        MENU_HREF = #{menuHref,jdbcType=VARCHAR},
      </if>
    </set>
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bamboo.module.menu.beans.Menu">
    update ts_menu_def
    set MENU_NAME = #{menuName,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=DATE},
      PARENT_MENU_ID = #{parentMenuId,jdbcType=VARCHAR},
      MENU_HREF = #{menuHref,jdbcType=VARCHAR}
    where MENU_ID = #{menuId,jdbcType=INTEGER}
  </update>
</mapper>