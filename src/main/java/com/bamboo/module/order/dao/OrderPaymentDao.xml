<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bamboo.module.order.dao.OrderPaymentDao">
  <resultMap id="BaseResultMap" type="com.bamboo.module.order.beans.OrderPayment">
    <id column="ORDER_ID" jdbcType="VARCHAR" property="orderId" />
    <id column="PAY_TYPE" jdbcType="INTEGER" property="payType" />
    <result column="PAY_METHOD" jdbcType="INTEGER" property="payMethod" />
    <result column="PAY_ACCT_ID" jdbcType="VARCHAR" property="payAcctId" />
    <result column="PAYED_TIME" jdbcType="TIMESTAMP" property="payedTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ORDER_ID, PAY_TYPE, PAY_METHOD, PAY_ACCT_ID, PAYED_TIME
  </sql>
  <select id="selectByExample" parameterType="com.bamboo.module.order.beans.OrderPaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from to_order_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.bamboo.module.order.beans.OrderPaymentKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from to_order_payment
    where ORDER_ID = #{orderId,jdbcType=VARCHAR}
      and PAY_TYPE = #{payType,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.bamboo.module.order.beans.OrderPaymentKey">
    delete from to_order_payment
    where ORDER_ID = #{orderId,jdbcType=VARCHAR}
      and PAY_TYPE = #{payType,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bamboo.module.order.beans.OrderPaymentExample">
    delete from to_order_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bamboo.module.order.beans.OrderPayment">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into to_order_payment (PAY_TYPE, PAY_METHOD, PAY_ACCT_ID, 
      PAYED_TIME)
    values (#{payType,jdbcType=INTEGER}, #{payMethod,jdbcType=INTEGER}, #{payAcctId,jdbcType=VARCHAR}, 
      #{payedTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bamboo.module.order.beans.OrderPayment">
    <selectKey keyProperty="orderId" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into to_order_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="payType != null">
        PAY_TYPE,
      </if>
      <if test="payMethod != null">
        PAY_METHOD,
      </if>
      <if test="payAcctId != null">
        PAY_ACCT_ID,
      </if>
      <if test="payedTime != null">
        PAYED_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="payType != null">
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="payMethod != null">
        #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="payAcctId != null">
        #{payAcctId,jdbcType=VARCHAR},
      </if>
      <if test="payedTime != null">
        #{payedTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bamboo.module.order.beans.OrderPaymentExample" resultType="java.lang.Long">
    select count(*) from to_order_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update to_order_payment
    <set>
      <if test="record.orderId != null">
        ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      </if>
      <if test="record.payMethod != null">
        PAY_METHOD = #{record.payMethod,jdbcType=INTEGER},
      </if>
      <if test="record.payAcctId != null">
        PAY_ACCT_ID = #{record.payAcctId,jdbcType=VARCHAR},
      </if>
      <if test="record.payedTime != null">
        PAYED_TIME = #{record.payedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update to_order_payment
    set ORDER_ID = #{record.orderId,jdbcType=VARCHAR},
      PAY_TYPE = #{record.payType,jdbcType=INTEGER},
      PAY_METHOD = #{record.payMethod,jdbcType=INTEGER},
      PAY_ACCT_ID = #{record.payAcctId,jdbcType=VARCHAR},
      PAYED_TIME = #{record.payedTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bamboo.module.order.beans.OrderPayment">
    update to_order_payment
    <set>
      <if test="payMethod != null">
        PAY_METHOD = #{payMethod,jdbcType=INTEGER},
      </if>
      <if test="payAcctId != null">
        PAY_ACCT_ID = #{payAcctId,jdbcType=VARCHAR},
      </if>
      <if test="payedTime != null">
        PAYED_TIME = #{payedTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ORDER_ID = #{orderId,jdbcType=VARCHAR}
      and PAY_TYPE = #{payType,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bamboo.module.order.beans.OrderPayment">
    update to_order_payment
    set PAY_METHOD = #{payMethod,jdbcType=INTEGER},
      PAY_ACCT_ID = #{payAcctId,jdbcType=VARCHAR},
      PAYED_TIME = #{payedTime,jdbcType=TIMESTAMP}
    where ORDER_ID = #{orderId,jdbcType=VARCHAR}
      and PAY_TYPE = #{payType,jdbcType=INTEGER}
  </update>
</mapper>